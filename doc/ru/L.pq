[[[Н‘L/loop’
]]]Н‘[[[Зарезервированное/]]]Ключевое слово L/loop’


11l поддерживает 4 формы циклов.


Н(-1)‘1. Бесконечный цикл.’

#(11l)‘
L
   print("\a")
   sleep(1)
’


Н(-1)‘2. Цикл "while".’

#(11l)‘
L <выражение>
   ...
’

Тело цикла выполняется/повторяется до тех пор, пока заданное выражение истинно.


Н(-1)‘3. Повтор тела цикла заданное количество раз.’

#(11l)‘
L <число>
   ...
’

Пример:
#(11l)‘
L 3
   print("ABC")
’
выведет "ABC" 3 раза.

~‘Примечание: только числовые константы принимаются в качестве `<число>` на данный момент {если вам требуется повторять тело цикла произвольное количество раз, тогда используйте диапазон, например: #(11l)‘L 1..number’}.’


Н(-1)‘4. Цикл "for in".’

#(11l)‘
L(item) <итерируемое выражение>
   ...
’

Примеры:
#(11l)‘L(x) 1..10 {print(x)}’ выведет числа от `1` до `10` включительно.
#(11l)‘L(c) "str" {print(c)}’ выведет `"s"`, `"t"` и `"r"`.
#(11l)‘L(n) [9,7] {print(n)}’ выведет `9` и `7`.
#(11l)‘L(k, v) [‘k’ = 1] {print(k‘=’v)}’ выведет `k=1`.


Н‘[[[Зарезервированные/]]]Ключевые подслова L/loop’


[[[https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Statements/break]]]Инструкция `L.break`/`loop.break` прерывает выполнение текущего цикла.
У вас может возникнуть потребность имея несколько вложенных циклов указать какой из них следует прервать. [[[Как и в большинстве других языков, по]]]По умолчанию `L.break`/`loop.break`[[[ в 11l]]] прерывает самый внутренний цикл. Если вам необходимо прер[[[ы]]]вать не самый внутренний цикл, тогда просто укажите какой именно цикл необходимо прервать:
#(11l)‘
L(y) 0..10
   L(x) 0..10
      I a[y][x] == 1
         L(y).break
’
Также можно использовать `^L.break`, `^^L.break` и т.д.


[[[https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Statements/continue]]]Инструкция `L.continue`/`loop.continue` прерывает выполнение итерации текущего[[[ или отмеченного]]] цикла, и продолжает его выполнение на следующей итерации.


Код под `L.was_no_break`/`loop.was_no_break` выполняется только когда цикл успешно завершился без вызова `L.break`/`loop.break` (аналогично ‘else в Python’[https://pythonworld.ru/osnovy/cikly-for-i-while-operatory-break-i-continue-volshebnoe-slovo-else.html#else <- google:‘python else for’ <- https://www.rosettacode.org/wiki/ABC_Problem#Python:_Iterative.2C_with_tests]):
#(11l)‘
L(test) tests
   I !test.ok()
      L.break

   L.was_no_break
      print(‘All tests are ok!’)
’


`L.index`/`loop.index` можно использовать для получения индекса (номера начиная с 0) текущей итерации цикла.


`L.next`/`loop.next` на данный момент является проверкой того, остались ли ещё элементы итерируемого контейнера или же текущий элемент последний.
`L.prev`/`loop.prev` на данный момент не поддерживается.
