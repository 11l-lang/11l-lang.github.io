[[[Н‘Операторы’
]]]Н‘Операторы’


Таблица всех операторов 11l в порядке от наивысшего приоритета к низшему:
Т‘‘
‘x.y
module:f
0‘a[x]’
f(x)
x--
x++
’
‘Доступ к элементу
Функция или переменная модуля
Обращение к элементу контейнера
Вызов функции
Постфиксный декремент
Постфиксный инкремент’’
‘‘^’ ‘Оператор возведения в степень (ассоциативность: справа налево)’’
‘‘-x
+x
!x
(-)x
--x
++x
’ ‘Унарный минус
Унарный плюс
Логическое НЕ
Поразрядное НЕ (обоснование выбора: {

})
Префиксный декремент
Префиксный инкремент’’
‘‘x * y
x / y
x I/ y или x Ц/ y
x % y
’ ‘Умножение
Деление
Целочисленное деление
Остаток от деления’’
‘‘x + y
x - y’ ‘Сложение
Вычитание’’
‘‘x << y
x >> y’ ‘Поразрядный сдвиг влево
Поразрядный сдвиг вправо’’
‘‘x 0‘[&]’ y’ ‘Поразрядное И (обоснование выбора: {

})’’
‘‘x (+) y’ ‘Поразрядное исключающее ИЛИ (обоснование выбора: {

})’’
‘‘x 0‘[|]’ y’ ‘Поразрядное ИЛИ (обоснование выбора: {

})’’
‘‘x < y, x <= y
x > y, x >= y’ ‘Операции сравнения’’
‘‘x..y, x.<y
x<.y, x<.<y’ ‘Диапазоны’’
‘‘x""y и x‘’y’ ‘Конкатенация строк’’
‘‘x == y, x != y
e in c, e !in c
e C c, e !C c
’ ‘Сравнения
Элемент e содержится/‘не содержится’ в контейнере c’’
‘‘x & y’ ‘Логическое И’’
‘‘x | y’ ‘Логическое ИЛИ’’
‘‘x ? y’ ‘Вернуть левый операнд если он не нуль, иначе вернуть правый операнд’’
‘‘() -> выражение
x -> выражение
(x, y) -> выражение’ ‘Лямбда выражение’’
‘‘arr1 0‘[+]’ arr2’ ‘Конкатенация массивов’’
‘‘x = ...
x += ...
-= *= /= I/= Ц/=
%= >>= <<= ^=
0‘[+]= [&]= [|]=’
(+)= ‘’=’ ‘Присваивания (ассоциативность: справа налево)’’
’
