[[[H‘N/null’
]]]H‘Ключевое слово N/null’


`N`/`null` представляет нулевое или «пустое» значение для Nullable типов.
[[[
Также `N`/`null` может использоваться в качестве типа возвращаемого значения функции для указания того, что функция ничего не возвращает:
#(11l)‘
F func(a) -> N
    print(a)

(Int -> N) fptr = n -> func(n)
fptr(1)
’
]]
Такое решение было заимствовано из Python, но в Python не `N`/`null`, а `None`. `null` в качестве имени типа подходит гораздо хуже. И когда я увидел[https://docs.swift.org/swift-book/documentation/the-swift-programming-language/closures/ <- google:‘swift lambdas’] `Void` в Swift, а также вспомнил про `func(rcx, rdx, r8, r9, 2) -> void`, решил, что вместо `-> null` правильнее будет писать `-> Void`.
Можно было бы использовать специальный тип `None`, но наличие в языке 11l `None` с семантикой отличной от Python будет сбивать с толку питонистов.
Специальный тип `Nothing` решил не использовать — слишком длинно.
]
